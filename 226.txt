I've made a new page Java_Programming/Beginning_Java, I think it's a good idea to start moving/modifying/adding pages to it, so that the links appear as Java_Programming/Beginning_Java/Pages_Go_Here, but I don't know if this is the best option so waiting for the green light from major authors before I start work on it. --Mattylaws (talk) 13:16, 10 March 2010 (UTC)Hi I've been working on this book the past couple of days, just getting my head around it. There's a few things I'd like to discuss concerning the project. --Mattylaws (talk) 15:48, 17 February 2010 (UTC)Something I see as one of the most important issues: I'm not sure there are any clear aims in this book, I think that the general idea is to design the book as a reference and a book for new comers in Java and programming, but I don't think this really shows, at the moment its a mass of jumbled writings to do with Java, but this is a start, all we need to do now is define a solid book purpose or aim and then we can start really tackling the layout and writing style.So the book (from what I gather) as I mentioned before is geared towards being a reference book and also something for beginners. This might be difficult to achieve because if we go into depth about the java language, newbies will be lost.Say we want to take them through variables, which is one of the first things they'll learn about, and we start talking about static variables, then they could get lost because to really understand static variables you need to understand object orientation, which is something they'll learn about later. But then for people who are using the book as a reference they may find it helpful for it to talk about static declaration.– Mattylaws (talk) 15:48, 17 February 2010 (UTC)I agree with what you have said regarding the aim of the book not being clearly defined and structured. What I feel lacking in this book is, in actuality, the decent progression from beginner level topics to advanced. This book clearly needs to adopt a difficulty progression. I believe we should start discussing about the organisation of the book as soon as is possible and begin implementing it simultaneously. I also would strongly like to get rid of all the templates (e.g., content templates, content sub-categories templates, template for keywords within code snippets, etcetera) being used by this book.Another suggestion that I would like to make here is the inclusion of short tutorial-like progressive build-ups of code snippets for every topic being discussed. This would ensure that the reading comes natural and easy to the reader. Plus, I find definitions of keywords and techniques in separate paragraphs or notes, rather than flowing within text, very misleading for the beginners. We can work on a separate glossary for every thing at the end of the book for quick references.Hi there, thanks for your reply, sorry I have been away from wikibooks for a while due to life commitments. I agree with your statements concerning a progression through topics, from beginner through to advance. I think a major mistake that can be made is constructing a book while trying to cater all audiences at once, while constructing a tutorial, it's very easy to include everything on that topic rather than just the bare details a person of a certain expertise needs to know at that point in their progression. So major consideration is needed to what is included in a topic and what is left to be mentioned at a higher level, allowing more focus on teaching those at that level.These sort of ideas do in fact need a major overhaul of the book structure and layout. I found it quite confusing trying to navigate around, so I agree with the deletion of all the templates, I don't know if there is an easier method of maintaining the structure of a book without turning it into a completely flat hierarchy (or should we turn it into a flat hierarchy?). I hope there is some sort of framework for the ordering of pages, chapters, sections etc, where just changing one item would reorder them (keeping the ordering to just one area), being a programmer I always see code maintainability of utmost importance.So a natural step forward would be to construct (at least) three sections of the book: Beginner, Intermediate and Advance, with glossary and indexes at the back, introduction at the front plus all other gubbins and extra sections that we can decide upon at a later period. The major problem will be deciding upon the level of expertise needed for a certain topic.Although mainly cosmetic, I think a consistent style should be met throughout the book. This is concerning code examples, notes, warnings etc. Here is what I propose.–Mattylaws (talk) 15:48, 17 February 2010 (UTC)There are two types of code examples, one which displays just a small snippet of code, and another which displays a whole program or file. I think the snippets can just be held within the source tags, but sometimes I think it could be tidier if they were surrounded with a box, but it seems like a lot of effort employing css overrides(please correct me if I'm wrong).The full program and file example should definitely be held within a box, with the file name at the top, line numbers down the left hand side, and alternating striped colours for the lines, take a look at pastebin and some of their codes. This would need an external stylesheet. Ok after a little looking around I figured out what templates are and how to use them, and found Template:Code, nearly exactly what I needed, so I modified it and made a new Template:Java_Code_File, ready to be used.–Mattylaws (talk) 15:49, 17 February 2010 (UTC)For full java examples, where the whole file is written, I think this should be used, the following syntax is used:For more info you can check out Template:Java_Code_File and Template:Code. --Mattylaws (talk) 00:51, 18 February 2010 (UTC)There are a few other things like warnings and notes I quite often see in programming books that can be used in this book (the C++ book seems to use them too) Notes can be highlighted with a neutral colour like blue or green, with a notebook icon at the left, and warnings more of a orange or red colour with a exclamation mark in a triangle.–Mattylaws (talk) 15:49, 17 February 2010 (UTC)Learning styles is something I've learnt about in my current course and I think could be helpful to be applied to this book.The whole idea revolves around how people learn differently, although different people learn through a variety of different methods, quite often you can find their learning styles fall into one (or more) of three different categoriesThese learn best from hearing, so recorded messages stick a lot better; there's not much we can do for this group really, obviously due to the fact a book doesn't talk, maybe if we keep in mind the book may be transcribed to an audio book at a certain point in timePeople who fall into this category always learn best from seeing; diagrams, pictures, flow charts, any sort of visual aid to the book could prove very handy for this type of learner.People who learn best by doing; if we give the opportunity for the readers write out example programs, and then go a step further and give them ideas on how to expand on the program on their own, this could benefit these sort of learners invaluablyFor more information on learning styles, visit here, or take a look at the wikipedia page.--Mattylaws (talk) 14:21, 6 March 2010 (UTC)I've been working with Seam recently (teaching myself) and figure that I could help others as well making a manual of sorts as I go along. I started one over at the JBoss Wiki, but their default syntax (CamelCase) is just brutal to work with. Any objections to having its root at Seam? Oberiko (talk) 03:07, 23 January 2008 (UTC)Interesting, I thought that the front-end should be separated from the back-end(EJB). I don't know how Seam is doing the integration, I'll check it out. Thanks. Ervinn (talk) 20:37, 25 January 2008 (UTC)I just took a Java class this quarter, kind of fell in love with programming it, and decided to start adding some content to this book. Just thought I'd introduce myself! - Ceclauson (talk) 05:30, 7 March 2008 (UTC)I added some screenshots to a page I did on swing (an I think it looks pretty good), but I think there are some copyright issues with the images, and that they'll be deleted unless this can be fixed. Does anyone know anything about this who can help?--Ceclauson (talk) 20:09, 7 March 2008 (UTC)Some conventions would suit the book, so here comes a proposal, to be edited as you see fit.These should help those editors who would like to stick to them. --Dan Polansky (talk) 19:24, 6 April 2008 (UTC)It would be nice to have some model Wikibooks, from which to learn.Please add your candidates or comment on the linked ones. --Dan Polansky (talk) 19:37, 6 April 2008 (UTC)You may be interested in cleaning that up and including it as Java Programming/Syntax or something.  — Mike.lifeguard | talk 20:08, 8 November 2008 (UTC)Hi, my name's Beau, know Java and the most used APIs inside-out, and am ready to contribute. BeauMartinez (talk) 19:15, 31 January 2009 (UTC)I suggest merging The Way of the Program into Java Programming. As far as I can tell, both books have exactly the same scope (Java programming) and target audience (people that don't know any programming language yet). --DavidCary (talk) 05:05, 5 June 2009 (UTC)16:41, 6 March 2010 (UTC)The following pages are orphaned and not linked to by any page of this book. Please link to them, merge their content and label them with {{now merged|destination page}}, or if they are not needed add {{delete|reasoning}} to them.-- Adrignola talk contribs 16:27, 7 August 2009 (UTC)Ftiercel (talk) 13:39, 18 September 2009 (UTC)after going through the wikibook i found that there were no section pertaining to files and I/O (except for basic command line input. I think this is a important part of the java programming language. Possible subsections would/could include text and binary files and possibly xml. this would help the book greatly. Spock431 (talk) 00:54, 18 May 2010 (UTC)See if this links are useful to mention or mine.External Resources--Panic (discuss • contribs) 23:37, 24 November 2011 (UTC)Hi there contributors, I'm wondering if these two pages have information worth being included within this wikibook. If so, would someone kindly harvest the information and tag the Transwiki pages for deletion?Thanks! -Thereen (discuss • contribs) 20:45, 27 July 2012 (UTC)By now the book would have explained how the user can install Java and other items needed to develop Java programs.In rough order a list of topics that shall be taught in the book (though not necisarily the titles of indidvidual pages). I see the Beggining_Java section to be the part of the book that deals with the base structure of the Java Programming, so excludes topics concerning the API.Feel free to add to or reorder this listList of things to teach in this section)--Mattylaws (talk) 16:53, 10 March 2010 (UTC)Hi,I planned to do the merge. Ftiercel (discuss • contribs) 19:36, 23 May 2013 (UTC)Dear All, I would like to express my interest to contribute in the content of the wiki/Java_Programming WikiBooks. I personally feel that this book will be a very useful introductory to Java programming for beginners. I would like to propose the following two sub topics for inclusion in the book: Java_Programming/Algorithms and Java_Programming/Flow_Chart. Let me know your view! Thanks! (Shchung (discuss • contribs) 16:22, 30 July 2014 (UTC))I would like to welcome JeanneCMH to the involvement of this Java Programming WikiBooks. JeanneCMH, please feel free to add your thoughts here!